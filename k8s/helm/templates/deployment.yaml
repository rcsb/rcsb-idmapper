{{- range tuple "a" "b" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm_chart.fullname" $ }}-{{ . }}
  labels:
    {{- include "helm_chart.labels" $ | nindent 4 }}
    rcsb.org/path: {{ . | quote }}
spec:
  {{- if not $.Values.autoscaling.enabled }}
  replicas: {{ $.Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ $.Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "helm_chart.selectorLabels" $ | nindent 6 }}
      rcsb.org/path: {{ . | quote }}
  strategy:
    type: {{ $.Values.deploymentStrategy.type }}
    {{- if eq $.Values.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ $.Values.deploymentStrategy.maxSurge }}
      maxUnavailable: {{ $.Values.deploymentStrategy.maxUnavailable }}
    {{- end }}
  template:
    metadata:
      labels:
        {{- include "helm_chart.selectorLabels" $ | nindent 8 }}
        rcsb.org/path: {{ . | quote }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ . }}
      {{- end }}
      {{- if $.Values.enablePodAntiAffinity }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "helm_chart.selectorLabels" $ | nindent 20 }}
                topologyKey: kubernetes.io/hostname
              weight: 1
      {{- end }}
      containers:
        - name: {{ $.Chart.Name }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $.Values.service.targetPort }}
              protocol: TCP
          {{- if $.Values.livenessProbe.enable }}
          livenessProbe:
            initialDelaySeconds: {{ $.Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ $.Values.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ $.Values.livenessProbe.http.path }}
              port: http
          {{- end }}
          {{- if $.Values.readinessProbe.enable }}
          readinessProbe:
            initialDelaySeconds: {{ $.Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ $.Values.readinessProbe.failureThreshold }}
            httpGet:
              path: {{ $.Values.readinessProbe.http.path }}
              port: http
          {{- end }}
          {{- if $.Values.startupProbe.enable }}
          startupProbe:
            periodSeconds: {{ $.Values.startupProbe.periodSeconds }}
            failureThreshold: {{ $.Values.startupProbe.failureThreshold }}
            httpGet:
              path: {{ $.Values.startupProbe.http.path }}
              port: http
          {{- end }}
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
          env:
            - name: MONGODB_URI
              value: {{ index $.Values.idMapperAppProperties.mongoDbUri . }}
{{- end }}
